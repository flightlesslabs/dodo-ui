import{p as C,f as N,a as w,g as a,u as r,s as n,b as $,c as h,j as o,k as M}from"./iframe-CCEZUMhS.js";import{c as y,d as D}from"./create-runtime-stories-CSTpu6Dk.js";import{s as I,N as x}from"./NumericInput.stories-DUvRkvfe.js";import"./preload-helper-D9Z9MdNV.js";import"./this-C9Nk6BSb.js";import"./InputEnclosure-CGobYz4Y.js";import"./DynamicInput-CblzNNqf.js";import"./attributes-CzzGBcbs.js";import"./style-D3ywwbI_.js";import"./input-CyAefIDG.js";import"./getMoment-nKS0EjjE.js";import"./Popper-2b_ezvj8.js";import"./Paper-BA8EWlFP.js";import"./colors-C3b1rS-d.js";import"./MenuItem-OYyXgQrM.js";import"./roundness-fyqvrcF6.js";import"./size-C-8mwSpB.js";const A={component:x,tags:["autodocs"],argTypes:I,parameters:{docs:{description:{component:""}}}},{Story:i}=D();let t=M(0);var P=N("<!> <!> <!> <!> <!> <!>",1);function v(_,f){C(f,!0);var c=P(),u=w(c);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)}}));i(u,{name:"Default",get args(){return a(s)},parameters:{docs:{description:{story:"NumericInput with default style"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var m=n(u,2);{let s=r(()=>({value:a(t),onValueChange:e=>{console.log(e),o(t,e,!0)},min:25}));i(m,{name:"Min",get args(){return a(s)},parameters:{docs:{description:{story:"Min, In this case min is set to 25"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var g=n(m,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},max:25}));i(g,{name:"Max",get args(){return a(s)},parameters:{docs:{description:{story:"Max, In this case max is set to 25"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var p=n(g,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},allowNegativeValues:!0}));i(p,{name:"AllowNegativeValues",get args(){return a(s)},parameters:{docs:{description:{story:"Allow Negative values"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var d=n(p,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},decimalPlaces:2}));i(d,{name:"DecimalPlaces",get args(){return a(s)},parameters:{docs:{description:{story:"Decimal Places"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var V=n(d,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},log:!0}));i(V,{name:"LogValidations",get args(){return a(s)},parameters:{docs:{description:{story:"Log validations, check console"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}$(_,c),h()}v.__docgen={data:[],name:"Validation.stories.svelte"};const l=y(v,A),Q=["Default","Min","Max","AllowNegativeValues","DecimalPlaces","LogValidations"],U={...l.Default,tags:["svelte-csf-v5"]},W={...l.Min,tags:["svelte-csf-v5"]},X={...l.Max,tags:["svelte-csf-v5"]},Y={...l.AllowNegativeValues,tags:["svelte-csf-v5"]},Z={...l.DecimalPlaces,tags:["svelte-csf-v5"]},ee={...l.LogValidations,tags:["svelte-csf-v5"]};export{Y as AllowNegativeValues,Z as DecimalPlaces,U as Default,ee as LogValidations,X as Max,W as Min,Q as __namedExportsOrder,A as default};
