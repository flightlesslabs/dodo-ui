import{p as C,f as N,a as w,g as a,u as r,s as n,b as $,c as h,j as o,k as M}from"./iframe-DpdNrh4j.js";import{c as y,d as D}from"./create-runtime-stories-D0NGXSfE.js";import{s as I,N as x}from"./NumericInput.stories-rAkM27jM.js";import"./this-B3JHmcvJ.js";import"./InputEnclosure-vXtNkLjq.js";import"./DynamicInput-2jioO7mD.js";import"./attributes-C8pZS94E.js";import"./style--qz3mRur.js";import"./input-B99Fd7Bz.js";import"./Popper-ujftblw2.js";import"./getMoment-DQPCA-4b.js";import"./Paper-CSJs_APj.js";import"./colors-C3b1rS-d.js";import"./MenuItem-CQr4AVzp.js";import"./roundness-fyqvrcF6.js";import"./size-C-8mwSpB.js";const A={component:x,tags:["autodocs"],argTypes:I,parameters:{docs:{description:{component:""}}}},{Story:i}=D();let t=M(0);var P=N("<!> <!> <!> <!> <!> <!>",1);function v(_,f){C(f,!0);var c=P(),u=w(c);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)}}));i(u,{name:"Default",get args(){return a(s)},parameters:{docs:{description:{story:"NumericInput with default style"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var m=n(u,2);{let s=r(()=>({value:a(t),onValueChange:e=>{console.log(e),o(t,e,!0)},min:25}));i(m,{name:"Min",get args(){return a(s)},parameters:{docs:{description:{story:"Min, In this case min is set to 25"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var g=n(m,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},max:25}));i(g,{name:"Max",get args(){return a(s)},parameters:{docs:{description:{story:"Max, In this case max is set to 25"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var p=n(g,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},allowNegativeValues:!0}));i(p,{name:"AllowNegativeValues",get args(){return a(s)},parameters:{docs:{description:{story:"Allow Negative values"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var d=n(p,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},decimalPlaces:2}));i(d,{name:"DecimalPlaces",get args(){return a(s)},parameters:{docs:{description:{story:"Decimal Places"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}var V=n(d,2);{let s=r(()=>({value:a(t),onValueChange:e=>{o(t,e,!0)},log:!0}));i(V,{name:"LogValidations",get args(){return a(s)},parameters:{docs:{description:{story:"Log validations, check console"}},__svelteCsf:{rawCode:"<NumericInput {...args} />"}}})}$(_,c),h()}v.__docgen={data:[],name:"Validation.stories.svelte"};const l=y(v,A),K=["Default","Min","Max","AllowNegativeValues","DecimalPlaces","LogValidations"],Q={...l.Default,tags:["svelte-csf-v5"]},U={...l.Min,tags:["svelte-csf-v5"]},W={...l.Max,tags:["svelte-csf-v5"]},X={...l.AllowNegativeValues,tags:["svelte-csf-v5"]},Y={...l.DecimalPlaces,tags:["svelte-csf-v5"]},Z={...l.LogValidations,tags:["svelte-csf-v5"]};export{X as AllowNegativeValues,Y as DecimalPlaces,Q as Default,Z as LogValidations,W as Max,U as Min,K as __namedExportsOrder,A as default};
